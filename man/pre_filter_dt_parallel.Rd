% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pre_filter_parallel.R
\name{pre_filter_dt_parallel}
\alias{pre_filter_dt_parallel}
\title{Pre-filter Data Table in Parallel}
\usage{
pre_filter_dt_parallel(df, df_population, threshold, max.T, var_type_override)
}
\arguments{
\item{df}{A data.table containing the main dataset to filter.}

\item{df_population}{A data.table containing the population data for filtering.}

\item{threshold}{A numeric value specifying the minimum frequency threshold for variables to retain.}

\item{max.T}{A numeric value specifying the maximum allowed time for filtering rows.}

\item{var_type_override}{A named vector indicating the types of variables (e.g., "categorical", "hierarchical").}
}
\value{
A filtered data.table containing only the rows and variables that meet the specified criteria.
}
\description{
This function performs pre-filtering on a data.table in parallel. It filters rows based on population,
time constraints, and variable types. It also calculates variable frequencies in parallel and removes
variables that do not meet a specified frequency threshold.
}
\examples{
\dontrun{
library(data.table)

# Example data
df <- data.table(ID = c(1, 1, 2, 2, 3),
                 var = c("age", "sex", "age", "sex", "age"),
                 t = c(0.5, 1, 2, 3, 0.5))
df_population <- data.table(ID = c(1, 2, 3))
var_type_override <- c(age = "numerical", sex = "categorical")

# Run pre-filtering
result <- pre_filter_dt_parallel(
  df = df,
  df_population = df_population,
  threshold = 0.5,
  max.T = 2,
  var_type_override = var_type_override
)
print(result)
}

}
